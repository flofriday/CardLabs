# Temporary storage (H2)
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb;
spring.datasource.username=sa
spring.datasource.password=
# This directs Spring to interpret queries using the PostgreSQL dialect and generate them as PostgreSQL queries
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.sql.init.platform=local
spring.jpa.defer-datasource-initialization=true

# CardLabs
cardlabs.oauth.frontend=http://23ws-ase-pr-inso-04.apps.student.inso-w.at

# RabbitMQ
spring.rabbitmq.host=${RMQ_HOST:kangaroo.rmq.cloudamqp.com}
spring.rabbitmq.port=${RMQ_PORT:5672}
spring.rabbitmq.username=${RMQ_USER:sypfwnyo}
spring.rabbitmq.password=${RMQ_PASSWORD:eqmALm2ALwJDMlt_UIG0aiinYTsvi5Jp}
spring.rabbitmq.virtual-host=${RMQ_VIRTUALHOST:#{null}}

# Auth
spring.security.oauth2.client.registration.github.client-id=d37b562fd77916d2682c
spring.security.oauth2.client.registration.github.client-secret=1e9db4c8bec3d5ba443eba071cd782398c7ea880
spring.security.oauth2.client.registration.github.redirect-uri=http://23ws-ase-pr-inso-04.apps.student.inso-w.at/login/oauth2/code/github
spring.security.oauth2.client.registration.google.client-id=927549070852-knk92q1sklpab1np78qomsj2vq4jmkad.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://23ws-ase-pr-inso-04.apps.student.inso-w.at/login/oauth2/code/google