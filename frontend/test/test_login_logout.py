# Generated by Selenium IDE
import pytest
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait

#if the argument is changed to "driver" then the tester will see the browser
def test_login_with_valid_account_data(driver_headless):
    driver = driver_headless
    driver.get("http://127.0.0.1:3000/")
    driver.set_window_size(1900, 1020)
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "login_button_navbar")))
    driver.find_element(By.ID, "login_button_navbar").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "username")))
    driver.find_element(By.ID, "username").click()
    driver.find_element(By.ID, "username").send_keys("test1")
    driver.find_element(By.ID, "password").click()
    driver.find_element(By.ID, "password").send_keys("pass1")
    driver.find_element(By.ID, "login_button").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "profile_pic_in_navbar")))

def test_login_with_non_existing_username(driver_headless):
    driver = driver_headless
    driver.get("http://127.0.0.1:3000/")
    driver.set_window_size(1900, 1020)
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "login_button_navbar")))
    driver.find_element(By.ID, "login_button_navbar").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "username")))
    driver.find_element(By.ID, "username").click()
    driver.find_element(By.ID, "username").send_keys("test")
    driver.find_element(By.ID, "password").click()
    driver.find_element(By.ID, "password").send_keys("pass1")
    driver.find_element(By.ID, "login_button").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".text-sm > div:nth-child(2)")))
    elements = driver.find_elements(By.ID, "login_button_navbar")
    assert len(elements) > 0
    elements = driver.find_elements(By.XPATH, "//h1[contains(.,\'Login\')]")
    assert len(elements) > 0

def test_login_with_valid_user_but_invalid_password(driver_headless):
    driver = driver_headless
    driver.get("http://127.0.0.1:3000/")
    driver.set_window_size(1900, 1020)
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "login_button_navbar")))
    driver.find_element(By.ID, "login_button_navbar").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "username")))
    driver.find_element(By.ID, "username").click()
    driver.find_element(By.ID, "username").send_keys("test1")
    driver.find_element(By.ID, "password").click()
    driver.find_element(By.ID, "password").send_keys("pass")
    driver.find_element(By.ID, "login_button").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".text-sm > div:nth-child(2)")))
    elements = driver.find_elements(By.ID, "login_button_navbar")
    assert len(elements) > 0
    elements = driver.find_elements(By.XPATH, "//h1[contains(.,\'Login\')]")
    assert len(elements) > 0

def test_logout(driver_headless):
    driver = driver_headless
    #for logout we first need to login
    driver.get("http://127.0.0.1:3000/")
    driver.set_window_size(1900, 1020)
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "login_button_navbar")))
    driver.find_element(By.ID, "login_button_navbar").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "username")))
    driver.find_element(By.ID, "username").click()
    driver.find_element(By.ID, "username").send_keys("test1")
    driver.find_element(By.ID, "password").click()
    driver.find_element(By.ID, "password").send_keys("pass1")
    driver.find_element(By.ID, "login_button").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "profile_pic_in_navbar")))

    # the logout
    driver.find_element(By.ID, "profile_pic_in_navbar").click()
    driver.find_element(By.ID, "logout_button_navbar").click()
    WebDriverWait(driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "login_button_navbar")))
